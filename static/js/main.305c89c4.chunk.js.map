{"version":3,"sources":["components/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","_ref","toggleDarkMode","toggleDarkTheme","isOpen","setIsOpen","useState","React","createElement","className","onClick","handleToggle","concat","href","src","alt","Header","lazy","SoftwareProjects","DesignProjects","Experiences","Footer","App","cursor","useRef","setToggleDarkMode","useEffect","mode","root","document","documentElement","style","setProperty","updateCssVariables","darkTheme","createTheme","palette","primary","main","getComputedStyle","getPropertyValue","trim","background","default","paper","text","typography","fontFamily","ThemeProvider","theme","CssBaseline","onMouseMove","e","current","top","clientY","left","clientX","ref","Suspense","fallback","ClipLoader","color","loading","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.305c89c4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/navbar.css';\n\nconst Navbar = ({ toggleDarkMode, toggleDarkTheme }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"hamburger\" onClick={handleToggle}>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <ul className={`nav-links ${isOpen ? 'show' : ''}`}>\n        <li><a href=\"#header\">About</a></li>\n        <li><a href=\"#software-projects\">Software</a></li>\n        <li><a href=\"#design-projects\">Design</a></li>\n        <li><a href=\"#experiences\">Experiences</a></li>\n        <li>\n          <button className=\"theme-toggle\" onClick={toggleDarkTheme}>\n            <img\n              src={toggleDarkMode ? \"/images/icons/moon-icon.png\" : \"/images/icons/sun-icon.png\"}\n              alt={toggleDarkMode ? \"Moon Icon\" : \"Sun Icon\"}\n            />\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Navbar;","import React, { useState, useEffect, useRef, Suspense, lazy } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport \"./styles/index.css\";\n\n// Lazy load sections\nconst Header = lazy(() => import(\"./sections/Header\"));\nconst SoftwareProjects = lazy(() => import(\"./sections/SoftwareProjects\"));\nconst DesignProjects = lazy(() => import(\"./sections/DesignProjects\"));\nconst Experiences = lazy(() => import(\"./sections/Experiences\"));\nconst Footer = lazy(() => import(\"./sections/Footer\"));\n\nfunction App() {\n  const cursor = useRef(null);\n  const changePosition = (e) => {\n    cursor.current.style.top = `${e.clientY}px`;\n    cursor.current.style.left = `${e.clientX}px`;\n  };\n\n  const [toggleDarkMode, setToggleDarkMode] = useState(true);\n  const toggleDarkTheme = () => {\n    setToggleDarkMode(!toggleDarkMode);\n  };\n\n  const updateCssVariables = (mode) => {\n    const root = document.documentElement;\n    if (mode === \"dark\") {\n      root.style.setProperty(\"--primary\", \"#2ecc71\");\n      root.style.setProperty(\"--secondary\", \"#D9FDD6\");\n      root.style.setProperty(\"--card\", \"#212121\");\n      root.style.setProperty(\"--card-secondary\", \"#424242\");\n      root.style.setProperty(\"--background\", \"linear-gradient(45deg, #192019, #323232, #192019, #545454)\");\n      root.style.setProperty(\"--text\", \"#e8e8e8\");\n      root.style.setProperty(\"--border\", \"#424242\");\n      root.style.setProperty(\"--nav-background\", \"#424242\");\n      root.style.setProperty(\"--light-border\", \"#ffffff\");\n    } else {\n      root.style.setProperty(\"--primary\", \"#2ecc71\");\n      root.style.setProperty(\"--secondary\", \"#494d4a\");\n      root.style.setProperty(\"--card\", \"#f0f0f0\");\n      root.style.setProperty(\"--card-secondary\", \"#dbdbdb\");\n      root.style.setProperty(\"--background\", \"linear-gradient(-45deg, white, #e0ffed, white, #bbe3b8)\");\n      root.style.setProperty(\"--text\", \"#40403f\");\n      root.style.setProperty(\"--border\", \"#b3b3b3\");\n      root.style.setProperty(\"--nav-background\", \"#e9f0e9\");\n      root.style.setProperty(\"--light-border\", \"#828281\");\n    }\n  };\n\n  useEffect(() => {\n    updateCssVariables(toggleDarkMode ? \"dark\" : \"light\");\n  }, [toggleDarkMode]);\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: toggleDarkMode ? \"dark\" : \"light\",\n      primary: {\n        main: getComputedStyle(document.documentElement).getPropertyValue(\"--primary\").trim(),\n      },\n      background: {\n        default: getComputedStyle(document.documentElement).getPropertyValue(\"--background\").trim(),\n        paper: getComputedStyle(document.documentElement).getPropertyValue(\"--background\").trim(),\n      },\n      text: {\n        primary: getComputedStyle(document.documentElement).getPropertyValue(\"--text\").trim(),\n      },\n    },\n    typography: {\n      fontFamily: \"Satoshi, Arial, sans-serif\",\n    },\n  });\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <div className=\"app\" onMouseMove={changePosition}>\n        <div className=\"cursor-style\" ref={cursor}>\n          <div className=\"cursor-inner\"></div>\n        </div>\n        <Navbar toggleDarkMode={toggleDarkMode} toggleDarkTheme={toggleDarkTheme} />\n        <Suspense fallback={<div className=\"loader-container\"><ClipLoader color={\"#2ecc71\"} loading={true} size={50} /></div>}>\n          <Header />\n          <SoftwareProjects />\n          <DesignProjects />\n          <Experiences />\n          <Footer />\n        </Suspense>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}